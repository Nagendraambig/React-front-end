{"version":3,"sources":["components/loading.js","shared/baseUrl.js","components/home.js","components/menufunc.js","components/contactus.js","components/aboutus.js","components/header.js","components/footer.js","components/dishfunc.js","redux/ActionCreator.js","redux/ActionTypes.js","components/Main.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformprops","exitTransorm","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","disheserrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrmess","Rendermenu","onClick","to","id","width","object","CardImgOverlay","heading","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","value","textarea","rows","Button","type","color","Component","About","console","log","leaders","Media","tag","left","middle","body","RenderLeaders","list","CardHeader","title","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","isOpen","navbar","Nav","NavItem","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","innerRef","input","Footer","CommentForm","postComment","dishId","rating","author","comment","RenderDish","transformProps","exitTransform","RenderCmts","comments","com","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetails","dishesFailed","errmess","payload","addDishes","addComments","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishesErrMess","promotions","promo","lead","leadersErrMess","exact","match","parseInt","params","ErrMess","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","errmMss","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00a47f6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport { Loading } from './loading'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if(isLoading) {\r\n        return(\r\n            <Loading />\r\n        )\r\n    }\r\n    else if(errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n                transformprops = {{\r\n                    exitTransorm: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src= {baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle><h4>{item.name}</h4></CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText><p>{item.description}</p></CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.disheserrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrmess} />\r\n                </div>\r\n            </div>\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link } from 'react-router-dom'\r\nimport { Loading } from './loading';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\n    function Rendermenu ({dish, onClick}) {\r\n        return(\r\n            <Card>\r\n                    <Link to={`/menu/${dish.id}`}>\r\n                        <CardImg width=\"100%\" object src={baseUrl + dish.image} alt=\"{dish.name}\"/>\r\n                        <CardImgOverlay>\r\n                            <CardTitle heading><h5>{dish.name}</h5></CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Link>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-2\">\r\n                    <Rendermenu dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if(props.dishes.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>Menu</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {menu}\r\n                        </div>\r\n                        \r\n                    </div>\r\n            );\r\n    }\r\n        \r\n\r\nexport default Menu","import React, { Component } from 'react';\r\nimport { Breadcrumb , BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, Form, Errors } from 'react-redux-form'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) =>(val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current state is : \" + JSON.stringify(values));\r\n        // alert(\"Thank you for your feedback\\n\" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>ContactUs</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>ContactUs</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"#tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                     className=\"form-control\" placeholder=\"First Name\" \r\n                                     validators = {{\r\n                                         required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                     }} />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".firstname\" show=\"touched\"\r\n                                        messages = {{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 or less characters'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text id=\"lastname\" model=\".lastname\" name=\"lastname\"\r\n                                     placeholder=\"Last Name\"className=\"form-control\" \r\n                                     validators = {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                   <Errors className=\"text-danger\"\r\n                                       model=\".lastname\" show=\"touched\"\r\n                                       messages = {{\r\n                                           required: 'Required',\r\n                                           minLength: 'Must be greater than 2 characters',\r\n                                           maxLength: 'Must be 15 or less characters'\r\n                                       }}\r\n                                   />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                    className=\"form-control\" placeholder=\"Tel. Number\"\r\n                                    validators = {{\r\n                                        required, minLength: minLength(10), maxLength: maxLength(15), isNumber\r\n                                    }} />\r\n                                   <Errors className=\"text-danger\"\r\n                                       model=\".telnum\" show=\"touched\"\r\n                                       messages = {{\r\n                                           required: 'Required',\r\n                                           minLength: 'Must be greater than 9 numbers',\r\n                                           maxLength: 'Must be 15 or less numbers',\r\n                                           isNumber: 'Must be a number'\r\n                                       }}\r\n                                   />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    className=\"form-control\" placeholder=\"Email\"\r\n                                    validators = {{\r\n                                        required, validEmail\r\n                                    }} />\r\n                                   <Errors className=\"text-danger\"\r\n                                       model=\".email\" show=\"touched\"\r\n                                       messages = {{\r\n                                           required: 'Required',\r\n                                           validEmail: 'Invalid Email address'\r\n                                       }}\r\n                                   />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                            <option value=\"Tel.\">Tel.</option>\r\n                                            <option value=\"Email\">Email</option>\r\n                                        </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" \r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './loading';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n    console.log(props.leaders);\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                            <Media body className=\"ml-5 start\">\r\n                                    <Media heading><h4>{leader.name}</h4></Media>\r\n                                    <p>{leader.designation}</p>\r\n                                    <p className=\"d-none d-md-block\">{leader.description}</p>                                \r\n                            </Media>\r\n                    </Media>\r\n          </div>\r\n          </Fade>\r\n        )\r\n    });\r\n    function RenderLeaders({isLoading, errMess}){\r\n        if(isLoading)\r\n            return <Loading />\r\n        else if(errMess)\r\n            return <h4>{errMess}</h4>\r\n        else {\r\n            return (\r\n                <Media list>\r\n                    <Stagger in>\r\n                        {leaders}\r\n                    </Stagger>\r\n            </Media>\r\n            )\r\n        }\r\n\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders \r\n                        isLoading={props.Loading} errMess={props.errMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, {Component } from 'react'\r\nimport { Navbar, NavbarBrand, NavItem, Nav, Jumbotron, NavbarToggler, Collapse, Button, \r\n    Modal, ModalHeader, ModalBody, FormGroup, Input, Form, Label  } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        })\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n        <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> Aboutus\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contactus\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        \r\n                    </Collapse>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                </div>\r\n            </Navbar>     \r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header align-items-center\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Restorant Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </Jumbotron>   \r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\"\r\n                            innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\"\r\n                            innerRef={(input) => this.password = input} />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check >\r\n                                <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                Remember Me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>    \r\n            </Modal>    \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nfunction Footer (props) {\r\n    return (\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>                \r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText,CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, \r\n    Modal, ModalHeader, ModalBody, Col, Row, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport { Loading } from './loading';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) =>(val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-edit fa-lg\"></span> SubmitComment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"container\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                            </Row>\r\n                            <Row>\r\n                                <Label htmlFor=\"firstname\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"yourname\" name=\"yourname\"\r\n                                     className=\"form-control\" placeholder=\"Your Name\" \r\n                                     validators = {{\r\n                                         required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                     }} />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".author\" show=\"touched\"\r\n                                        messages = {{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 or less characters'\r\n                                        }}\r\n                                    />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"message\" name=\"message\" rows=\"6\" \r\n                                    className=\"form-control\" />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n        function RenderDish({dish}) {\r\n                return (\r\n                    <div className=\"col-12 col-md-5 m-2\">\r\n                        <FadeTransform\r\n                            in\r\n                            transformProps={{\r\n                                exitTransform: 'scale(0.5) translateY(-50%)'\r\n                            }}>\r\n                            <Card>\r\n                                <CardImg width=\"100%\" object src={ baseUrl + dish.image} alt=\"{this.props.dish.name}\"/>\r\n                                <CardBody>\r\n                                    <CardTitle><h4>{dish.name}</h4></CardTitle>\r\n                                    <CardText>{dish.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </FadeTransform>    \r\n                    </div>\r\n                );\r\n        }\r\n        function RenderCmts({comments, postComment, dishId}){\r\n            if(comments != null) {\r\n                console.log(comments);\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-2\">\r\n                    {/* <Card> */}\r\n                    <h4>Comments</h4>\r\n                        <ul className=\"list-unstyled d-table\">\r\n                        <Stagger in>\r\n                            {comments.map((com) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key={com.id} >\r\n                                            <p>{com.comment}</p>\r\n                                            <p>--{com.author}, {new Intl.DateTimeFormat('en-us', {year:'numeric', month:'short',day:'2-digit'}).format(new Date(Date.parse(com.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                            </Stagger>\r\n                        </ul>\r\n                        <CommentForm dishId={dishId} postComment={postComment} />\r\n                    {/* </Card> */}\r\n                </div>\r\n            );\r\n            } else\r\n                return (\r\n                    <div></div>\r\n                )\r\n        }\r\n        const DishDetails = (props) => {\r\n            if(props.Loading) {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else if(props.errMess) {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4>{props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else if(props.dish != null)\r\n            {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>Menu</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <RenderDish dish = {props.dish} />\r\n                            <RenderCmts comments = {props.comments}\r\n                                postComment = {props.postComment} dishId={props.dish.id} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else \r\n            {\r\n                return (\r\n                    <div></div>\r\n                );\r\n            }\r\n    }\r\n\r\nexport default DishDetails","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n  })\r\n.then(response => response.json())\r\n.then(response => dispatch(addComment(response)))\r\n.catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n  })\r\n.then(response => response.json())\r\n.then(response => alert(\"Thank you for your feedback\\n\" + JSON.stringify(response)))\r\n.catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './home.js';\r\nimport Menu from './menufunc';\r\nimport Contact from './contactus';\r\nimport Aboutus from './aboutus'\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport DishDetails from './dishfunc';\r\nimport { connect } from 'react-redux'\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreator'\r\nimport { actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\n// import { renderIntoDocument } from 'react-dom/test-utils';\r\n//import { render } from '@testing-library/react';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      leaders: state.leaders,\r\n      promotions: state.promotions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render() {\r\n    const Homepage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading = {this.props.dishes.isLoading}\r\n              dishesErrMess = {this.props.dishes.errMess}\r\n              promotion = {this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading = {this.props.promotions.isLoading}\r\n              promosErrMess = {this.props.promotions.errMess}\r\n              leader = {this.props.leaders.leaders.filter((lead) => lead.featured)[0]}\r\n              leadersLoading = {this.props.leaders.isLoading}\r\n              leadersErrMess = {this.props.leaders.errMess}              \r\n        />\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n        return (\r\n          <DishDetails dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            Loading = {this.props.dishes.isLoading}\r\n            ErrMess = {this.props.dishes.errMess}\r\n            comments = {this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess = {this.props.comments.errMess}\r\n            postComment = {this.props.postComment} />\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n            <Switch>\r\n              <Route path=\"/home\" component={Homepage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}/>\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedback = {this.props.postFeedback} />} />\r\n              <Route path=\"/aboutus\" component = {() => <Aboutus leaders={this.props.leaders} Loading={this.props.isLoading} errMess={this.props.errMess} />}/>\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n            </CSSTransition> \r\n        </TransitionGroup>\r\n        <Footer />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading:false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading:true, errmMss: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading:false, errMess: action.payload, dishes: []}\r\n        \r\n        default:\r\n                return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, isLoading:false, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading:false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n                var comment = action.payload;\r\n                return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n                return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\nswitch(action.type){\r\n    case ActionTypes.ADD_LEADERS:\r\n        return { ...state, isLoading:false, errMess: null, leaders: action.payload}\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n        return { ...state, isLoading:true, errmMss: null, leaders: []}\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n        return { ...state, isLoading:false, errMess: action.payload, leaders: []}\r\n    \r\n    default:\r\n            return state;\r\n}\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading:false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading:true, errmMss: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading:false, errMess: action.payload, promotions: []}\r\n        \r\n        default:\r\n                return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: '',\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport { BrowserRouter } from 'react-router-dom'\n//import { render } from '@testing-library/react';\nimport './App.css';\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Leaders } from './leaders'\r\nimport { Promotions } from './promotions'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { InitialFeedback } from './forms'\r\nexport const ConfigureStore = () =>  {\r\n    const store = createStore (\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}